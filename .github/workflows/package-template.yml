name: Package NILU Beamer Theme

# Trigger the workflow on every push to the main branch
on:
  push:
    branches:
      - main

jobs:
  create-and-commit-zip:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # Disable to avoid auth issues on the next step

      # Step 2: Create the zip file containing the necessary files
      - name: Create zip of theme files
        run: |
          mkdir package
          cp beamerthemenilu.sty package/                # Copy .sty file
          #cp LICENSE package/                            # Do not include LICENSE at this stage
          cp -r graphics package/                        # Copy graphics directory
          cd package                                     # Move into the package directory
          zip -r ../NILU-Beamer-Theme.zip *              # Create zip file at root level

      # Step 3: Configure Git to push changes
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      # Step 4: Stash uncommitted changes (zip file)
      - name: Stash uncommitted changes
        run: git stash --include-untracked

      # Step 5: Pull the latest changes and rebase
      - name: Pull latest changes
        run: |
          git fetch origin
          git pull --rebase origin main

      # Step 6: Pop stashed changes (restore the zip file)
      - name: Pop stashed changes
        run: git stash pop

      # Step 7: Commit and push the zip file
      - name: Commit zip file
        run: |
          git add NILU-Beamer-Theme.zip
          git commit -m "Add or update NILU Beamer Theme zip file"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token to authenticate
